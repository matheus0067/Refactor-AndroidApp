[versions]
agp = "8.5.2"
kotlin = "2.1.0"
coreKtx = "1.15.0"
appcompat = "1.7.0"
material = "1.12.0"
activity = "1.10.0"
constraintlayout = "2.2.0"
lifecycle-runtime = "2.8.7"
lifecycle-viewmodel = "2.8.7"
lifecycle-livedata = "2.8.7"
retrofit = "2.11.0"
okhttp-bom = "4.12.0"
play-services-maps = "19.1.0"
room = "2.6.1"
shimmer = "0.5.0"
fragmentKtx = "1.8.6"
recyclerview = "1.4.0"
maps-utils = "3.4.0"
databinding = "8.8.1"
guava = "31.0.1-android"



#Hilt
dagger-hilt = "2.51.1"
ksp = "2.1.0-1.0.29"

# Testes
junit = "4.13.2"
junitVersion = "1.2.1"
espressoCore = "3.6.1"
mockito = "5.7.0"
mockito-inline = "5.2.0"
coroutines-test = "1.7.3"
androidx-test-core = "1.6.1"
androidx-test-ext-junit = "1.2.1"
androidx-test-runner = "1.6.2"
androidx-test-rules = "1.6.1"
androidx-arch-core-testing = "2.2.0"
testng = "6.9.6"
junitKtx = "1.2.1"
core = "1.47.0"
okhttp = "4.12.0"
mockwebserver = "4.12.0"
mockito-kotlin = "4.1.0"
benchmarkCommon = "1.3.3"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "coreKtx" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
material = { group = "com.google.android.material", name = "material", version.ref = "material" }
androidx-activity = { group = "androidx.activity", name = "activity", version.ref = "activity" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "constraintlayout" }
facebook-shimmer = { module = "com.facebook.shimmer:shimmer", version.ref = "shimmer" }
fragmentKtx = { group = "androidx.fragment", name = "fragment-ktx", version.ref = "fragmentKtx" }
recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "recyclerview" }
maps-utils = { module = "com.google.maps.android:android-maps-utils", version.ref = "maps-utils" }
databinding-compiler = { module = "androidx.databinding:databinding-compiler", version.ref = "databinding" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# Lifecycle
androidx-lifecycle-runtime = { group = "androidx.lifecycle", name = "lifecycle-runtime-ktx", version.ref = "lifecycle-runtime" }
androidx-lifecycle-viewmodel = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel" }
androidx-lifecycle-livedata = { group = "androidx.lifecycle", name = "lifecycle-livedata-ktx", version.ref = "lifecycle-livedata" }

# Dagger hilt
dagger-hilt = { module = "com.google.dagger:hilt-android", version.ref = "dagger-hilt"}
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "dagger-hilt"}

# Retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit"}
converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit"}

# OkHttp
okhttp-bom = { module = "com.squareup.okhttp3:okhttp-bom", version.ref = "okhttp-bom"}
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor"}

# Google Maps
play-services-maps = { module = "com.google.android.gms:play-services-maps", version.ref = "play-services-maps" }

# Testes
junit = { group = "junit", name = "junit", version.ref = "junit" }
#noinspection SimilarGradleDependency
androidx-junit = { group = "androidx.test.ext", name = "junit", version.ref = "junitVersion" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espressoCore" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-inline" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines-test" }
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
#noinspection SimilarGradleDependency
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-junit" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-rules" }
androidx-arch-core-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidx-arch-core-testing" }
# Dependências do OkHttp e MockWebServer
okhttp-okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "mockwebserver" }

# Dependências para testes
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }

# Room Database
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-testing = { group = "androidx.room", name = "room-testing", version.ref = "room" }
testng = { group = "org.testng", name = "testng", version.ref = "testng" }
androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junitKtx" }
core = { group = "com.google.ar", name = "core", version.ref = "core" }
androidx-benchmark-common = { group = "androidx.benchmark", name = "benchmark-common", version.ref = "benchmarkCommon" }


[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
dagger-hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger-hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}

